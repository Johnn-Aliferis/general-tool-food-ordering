version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: food_order_postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: food_order_db

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  redis:
    image: docker.io/bitnami/redis:7.0.12-debian-11-r2
    container_name: food_order_redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/bitnami/redis/data
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: food_order_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: food_order_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: food_order_kafka_ui
    restart: unless-stopped
    ports:
      - "8085:8080"
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: PLAINTEXT  
   
  cms-microservice:
    image: cms-microservice-api
    build:
      context: .
    ports:
      - "8081:8080"  
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=food_order_db;Username=postgres;Password=password
      - Redis__Host=redis
      - Redis__Port=6379
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka 

volumes:
  postgres_data:
  redis_data: